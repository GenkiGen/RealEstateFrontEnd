{"ast":null,"code":"import { LOGIN_START, LOGIN_FAILED, LOGIN_SUCCESS, LOGOUT, SIGNUP_START, SIGNUP_FAILED } from '../constants/action-types';\nimport service from '../../sevices/dataService';\nimport history from '../../router/history'; //Authentictae\n\nfunction loginStart() {\n  return {\n    type: LOGIN_START\n  };\n}\n\nfunction loginFailed() {\n  return {\n    type: LOGIN_FAILED\n  };\n}\n\nfunction loginSuccess(payload) {\n  return {\n    type: LOGIN_SUCCESS,\n    payload: payload\n  };\n}\n\nexport function logout() {\n  function _logout() {\n    return {\n      type: LOGOUT\n    };\n  }\n\n  return function (dispatch) {\n    service.logout();\n    dispatch(_logout());\n  };\n}\nexport function login(username, password) {\n  return function (dispatch) {\n    dispatch(loginStart());\n    service.login(username, password).then(function (success) {\n      dispatch(loginSuccess({\n        accessToken: success.data.accessToken,\n        userId: success.data.userId\n      }));\n      history.push('/');\n    }).catch(function (error) {\n      return dispatch(loginFailed({\n        error: error\n      }));\n    });\n  };\n} //Registration\n\nfunction signupStart() {\n  return {\n    type: SIGNUP_START\n  };\n}\n\nfunction signupFailed(payload) {\n  return {\n    type: SIGNUP_FAILED,\n    payload: payload\n  };\n}\n\nexport function signup(username, password) {\n  return function (dispatch) {\n    dispatch(signupStart());\n    service.register(username, password).then(function (data) {\n      dispatch(loginSuccess({\n        accessToken: data.data.accessToken,\n        userId: data.data.userId\n      }));\n      history.push('/');\n    }).catch(function (error) {\n      error.then(function (e) {\n        dispatch(signupFailed({\n          error: e.data.error\n        }));\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/home/phat/Desktop/HTML/Learning Node/RealEstate/frontend/src/redux/actions/index.js"],"names":["LOGIN_START","LOGIN_FAILED","LOGIN_SUCCESS","LOGOUT","SIGNUP_START","SIGNUP_FAILED","service","history","loginStart","type","loginFailed","loginSuccess","payload","logout","_logout","dispatch","login","username","password","then","success","accessToken","data","userId","push","catch","error","signupStart","signupFailed","signup","register","e"],"mappings":"AAAA,SACEA,WADF,EAEEC,YAFF,EAGEC,aAHF,EAIEC,MAJF,EAKEC,YALF,EAMEC,aANF,QAOO,2BAPP;AAQA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB,C,CAEA;;AACA,SAASC,UAAT,GAAsB;AACpB,SAAO;AACLC,IAAAA,IAAI,EAAET;AADD,GAAP;AAGD;;AAED,SAASU,WAAT,GAAuB;AACrB,SAAO;AACLD,IAAAA,IAAI,EAAER;AADD,GAAP;AAGD;;AAED,SAASU,YAAT,CAAsBC,OAAtB,EAA+B;AAC7B,SAAO;AACLH,IAAAA,IAAI,EAAEP,aADD;AAELU,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID;;AAED,OAAO,SAASC,MAAT,GAAkB;AACvB,WAASC,OAAT,GAAmB;AACjB,WAAO;AACLL,MAAAA,IAAI,EAAEN;AADD,KAAP;AAGD;;AAED,SAAO,UAASY,QAAT,EAAmB;AACxBT,IAAAA,OAAO,CAACO,MAAR;AACAE,IAAAA,QAAQ,CAACD,OAAO,EAAR,CAAR;AACD,GAHD;AAID;AAED,OAAO,SAASE,KAAT,CAAeC,QAAf,EAAyBC,QAAzB,EAAmC;AACxC,SAAO,UAASH,QAAT,EAAmB;AACxBA,IAAAA,QAAQ,CAACP,UAAU,EAAX,CAAR;AACAF,IAAAA,OAAO,CAACU,KAAR,CAAcC,QAAd,EAAwBC,QAAxB,EACQC,IADR,CACa,UAAAC,OAAO,EAAI;AACdL,MAAAA,QAAQ,CAACJ,YAAY,CAAC;AACpBU,QAAAA,WAAW,EAAED,OAAO,CAACE,IAAR,CAAaD,WADN;AAEpBE,QAAAA,MAAM,EAAEH,OAAO,CAACE,IAAR,CAAaC;AAFD,OAAD,CAAb,CAAR;AAIAhB,MAAAA,OAAO,CAACiB,IAAR,CAAa,GAAb;AACD,KAPT,EAQQC,KARR,CAQc,UAAAC,KAAK;AAAA,aAAIX,QAAQ,CAACL,WAAW,CAAC;AAAEgB,QAAAA,KAAK,EAALA;AAAF,OAAD,CAAZ,CAAZ;AAAA,KARnB;AASD,GAXD;AAYD,C,CAED;;AACA,SAASC,WAAT,GAAuB;AACrB,SAAO;AACLlB,IAAAA,IAAI,EAAEL;AADD,GAAP;AAGD;;AAED,SAASwB,YAAT,CAAsBhB,OAAtB,EAA+B;AAC7B,SAAO;AACLH,IAAAA,IAAI,EAAEJ,aADD;AAELO,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID;;AAED,OAAO,SAASiB,MAAT,CAAgBZ,QAAhB,EAA0BC,QAA1B,EAAoC;AACzC,SAAO,UAASH,QAAT,EAAmB;AACxBA,IAAAA,QAAQ,CAACY,WAAW,EAAZ,CAAR;AACArB,IAAAA,OAAO,CAACwB,QAAR,CAAiBb,QAAjB,EAA2BC,QAA3B,EACQC,IADR,CACa,UAAAG,IAAI,EAAI;AACZP,MAAAA,QAAQ,CAACJ,YAAY,CAAC;AACrBU,QAAAA,WAAW,EAAEC,IAAI,CAACA,IAAL,CAAUD,WADF;AAErBE,QAAAA,MAAM,EAAED,IAAI,CAACA,IAAL,CAAUC;AAFG,OAAD,CAAb,CAAR;AAIAhB,MAAAA,OAAO,CAACiB,IAAR,CAAa,GAAb;AACA,KAPT,EAQQC,KARR,CAQc,UAAAC,KAAK,EAAI;AACdA,MAAAA,KAAK,CAACP,IAAN,CAAW,UAAAY,CAAC,EAAI;AACdhB,QAAAA,QAAQ,CAACa,YAAY,CAAC;AAAEF,UAAAA,KAAK,EAAEK,CAAC,CAACT,IAAF,CAAOI;AAAhB,SAAD,CAAb,CAAR;AACA,OAFF;AAGA,KAZT;AAaD,GAfD;AAgBD","sourcesContent":["import {\n  LOGIN_START,\n  LOGIN_FAILED,\n  LOGIN_SUCCESS,\n  LOGOUT,\n  SIGNUP_START,\n  SIGNUP_FAILED\n} from '../constants/action-types'\nimport service from '../../sevices/dataService'\nimport history from '../../router/history'\n\n//Authentictae\nfunction loginStart() {\n  return {\n    type: LOGIN_START\n  }\n}\n\nfunction loginFailed() {\n  return {\n    type: LOGIN_FAILED\n  }\n}\n\nfunction loginSuccess(payload) {\n  return {\n    type: LOGIN_SUCCESS,\n    payload\n  }\n}\n\nexport function logout() {\n  function _logout() {\n    return {\n      type: LOGOUT\n    }\n  }\n\n  return function(dispatch) {\n    service.logout()\n    dispatch(_logout())\n  }\n}\n\nexport function login(username, password) {\n  return function(dispatch) {\n    dispatch(loginStart())\n    service.login(username, password)\n           .then(success => {\n              dispatch(loginSuccess({ \n                accessToken: success.data.accessToken,\n                userId: success.data.userId \n              })) \n              history.push('/')\n            })\n           .catch(error => dispatch(loginFailed({ error })))\n  }\n}\n\n//Registration\nfunction signupStart() {\n  return {\n    type: SIGNUP_START\n  }\n}\n\nfunction signupFailed(payload) {\n  return {\n    type: SIGNUP_FAILED,\n    payload\n  }\n}\n\nexport function signup(username, password) {\n  return function(dispatch) {\n    dispatch(signupStart())\n    service.register(username, password)\n           .then(data => { \n             dispatch(loginSuccess({\n              accessToken: data.data.accessToken,\n              userId: data.data.userId\n             }))\n             history.push('/')\n            })\n           .catch(error => {\n             error.then(e => {\n               dispatch(signupFailed({ error: e.data.error }))\n              })\n            })\n  }\n}"]},"metadata":{},"sourceType":"module"}