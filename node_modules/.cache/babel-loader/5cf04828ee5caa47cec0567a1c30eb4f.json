{"ast":null,"code":"import _objectSpread from \"/home/phat/Desktop/HTML/Learning Node/RealEstate/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { LOGIN_FAILED, LOGIN_START, LOGIN_SUCCESS, LOGOUT, FETCH_USER_SUCCESS, FETCH_USER_FAILED, FETCH_USER_INFO } from '../constants/action-types';\nimport auth from '../../sevices/authService';\nvar initialState = auth.isLoggedIn() ? {\n  loggingIn: false,\n  gettingInfo: false,\n  user: null,\n  authFailed: false,\n  token: auth.getToken()\n} : {\n  loggingIn: false,\n  gettingInfo: false,\n  user: null,\n  authFailed: false,\n  token: null\n};\n\nfunction authReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOGIN_START:\n      return _objectSpread({}, state, {\n        loggingIn: true,\n        user: null,\n        authFailed: false,\n        token: null\n      });\n\n    case LOGIN_FAILED:\n      return _objectSpread({}, state, {\n        loggingIn: false,\n        user: null,\n        authFailed: true,\n        token: null\n      });\n\n    case LOGIN_SUCCESS:\n      return _objectSpread({}, state, {\n        loggingIn: false,\n        user: action.payload.userId,\n        authFailed: false,\n        token: action.payload.accessToken\n      });\n\n    case LOGOUT:\n      return _objectSpread({}, state, {\n        loggingIn: false,\n        user: null,\n        authFailed: false,\n        token: null\n      });\n\n    case FETCH_USER_INFO:\n      console.log('Start');\n      return _objectSpread({}, state, {\n        gettingInfo: true\n      });\n\n    case FETCH_USER_SUCCESS:\n      return _objectSpread({}, state, {\n        user: action.payload.data,\n        gettingInfo: false\n      });\n\n    case FETCH_USER_FAILED:\n      return _objectSpread({}, state, {\n        user: null,\n        gettingInfo: false\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default authReducer;","map":{"version":3,"sources":["/home/phat/Desktop/HTML/Learning Node/RealEstate/frontend/src/redux/reducers/authReducer.js"],"names":["LOGIN_FAILED","LOGIN_START","LOGIN_SUCCESS","LOGOUT","FETCH_USER_SUCCESS","FETCH_USER_FAILED","FETCH_USER_INFO","auth","initialState","isLoggedIn","loggingIn","gettingInfo","user","authFailed","token","getToken","authReducer","state","action","type","payload","userId","accessToken","console","log","data"],"mappings":";AAAA,SACEA,YADF,EAEEC,WAFF,EAGEC,aAHF,EAIEC,MAJF,EAKEC,kBALF,EAMEC,iBANF,EAOEC,eAPF,QAQO,2BARP;AASA,OAAOC,IAAP,MAAiB,2BAAjB;AAEA,IAAMC,YAAY,GAAGD,IAAI,CAACE,UAAL,KAAoB;AACvCC,EAAAA,SAAS,EAAE,KAD4B;AAEvCC,EAAAA,WAAW,EAAE,KAF0B;AAGvCC,EAAAA,IAAI,EAAE,IAHiC;AAIvCC,EAAAA,UAAU,EAAE,KAJ2B;AAKvCC,EAAAA,KAAK,EAAEP,IAAI,CAACQ,QAAL;AALgC,CAApB,GAMjB;AACFL,EAAAA,SAAS,EAAE,KADT;AAEFC,EAAAA,WAAW,EAAE,KAFX;AAGFC,EAAAA,IAAI,EAAE,IAHJ;AAIFC,EAAAA,UAAU,EAAE,KAJV;AAKFC,EAAAA,KAAK,EAAE;AALL,CANJ;;AAcA,SAASE,WAAT,GAAmD;AAAA,MAA9BC,KAA8B,uEAAtBT,YAAsB;AAAA,MAARU,MAAQ;;AACjD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKlB,WAAL;AACE,+BACKgB,KADL;AAEEP,QAAAA,SAAS,EAAE,IAFb;AAGEE,QAAAA,IAAI,EAAE,IAHR;AAIEC,QAAAA,UAAU,EAAE,KAJd;AAKEC,QAAAA,KAAK,EAAE;AALT;;AAOF,SAAKd,YAAL;AACE,+BACKiB,KADL;AAEEP,QAAAA,SAAS,EAAE,KAFb;AAGEE,QAAAA,IAAI,EAAE,IAHR;AAIEC,QAAAA,UAAU,EAAE,IAJd;AAKEC,QAAAA,KAAK,EAAE;AALT;;AAOF,SAAKZ,aAAL;AACE,+BACKe,KADL;AAEEP,QAAAA,SAAS,EAAE,KAFb;AAGEE,QAAAA,IAAI,EAAEM,MAAM,CAACE,OAAP,CAAeC,MAHvB;AAIER,QAAAA,UAAU,EAAE,KAJd;AAKEC,QAAAA,KAAK,EAAEI,MAAM,CAACE,OAAP,CAAeE;AALxB;;AAOF,SAAKnB,MAAL;AACE,+BACKc,KADL;AAEEP,QAAAA,SAAS,EAAE,KAFb;AAGEE,QAAAA,IAAI,EAAE,IAHR;AAIEC,QAAAA,UAAU,EAAE,KAJd;AAKEC,QAAAA,KAAK,EAAE;AALT;;AAOF,SAAKR,eAAL;AACEiB,MAAAA,OAAO,CAACC,GAAR,CACE,OADF;AAGA,+BACKP,KADL;AAEEN,QAAAA,WAAW,EAAE;AAFf;;AAIF,SAAKP,kBAAL;AACE,+BACKa,KADL;AAEEL,QAAAA,IAAI,EAAEM,MAAM,CAACE,OAAP,CAAeK,IAFvB;AAGEd,QAAAA,WAAW,EAAE;AAHf;;AAKF,SAAKN,iBAAL;AACE,+BACKY,KADL;AAEEL,QAAAA,IAAI,EAAE,IAFR;AAGED,QAAAA,WAAW,EAAE;AAHf;;AAKF;AACE,aAAOM,KAAP;AAtDJ;AAwDD;;AAED,eAAeD,WAAf","sourcesContent":["import {\n  LOGIN_FAILED,\n  LOGIN_START,\n  LOGIN_SUCCESS,\n  LOGOUT,\n  FETCH_USER_SUCCESS,\n  FETCH_USER_FAILED,\n  FETCH_USER_INFO\n} from '../constants/action-types'\nimport auth from '../../sevices/authService'\n\nconst initialState = auth.isLoggedIn() ? {\n  loggingIn: false,\n  gettingInfo: false,\n  user: null,\n  authFailed: false,\n  token: auth.getToken()\n} : {\n  loggingIn: false,\n  gettingInfo: false,\n  user: null,\n  authFailed: false,\n  token: null\n}\n\nfunction authReducer(state = initialState, action) {\n  switch(action.type) {\n    case LOGIN_START:\n      return {\n        ...state,\n        loggingIn: true,\n        user: null,\n        authFailed: false,\n        token: null\n      }\n    case LOGIN_FAILED:\n      return {\n        ...state,\n        loggingIn: false,\n        user: null,\n        authFailed: true,\n        token: null\n      }\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        loggingIn: false,\n        user: action.payload.userId, \n        authFailed: false,\n        token: action.payload.accessToken\n      }\n    case LOGOUT:\n      return {\n        ...state,\n        loggingIn: false,\n        user: null,\n        authFailed: false,\n        token: null\n      }\n    case FETCH_USER_INFO:\n      console.log(\n        'Start'\n      )\n      return {\n        ...state,\n        gettingInfo: true\n      }\n    case FETCH_USER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload.data,\n        gettingInfo: false\n      }\n    case FETCH_USER_FAILED:\n      return {\n        ...state,\n        user: null,\n        gettingInfo: false\n      }\n    default:\n      return state\n  }\n}\n\nexport default authReducer"]},"metadata":{},"sourceType":"module"}