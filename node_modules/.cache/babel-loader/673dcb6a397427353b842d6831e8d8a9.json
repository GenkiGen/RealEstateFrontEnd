{"ast":null,"code":"import axios from 'axios';\nimport auth from '../sevices/authService';\nimport history from '../router/history';\n\nfunction login(username, password) {\n  return new Promise(function (resolve, reject) {\n    axios.post('http://localhost:8080/authenticate', {\n      name: username,\n      password: password\n    }, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(handleResponse).then(function (data) {\n      auth.login(data.data.accessToken);\n      return data;\n    }).then(function (data) {\n      return resolve(data);\n    }).catch(function (error) {\n      return reject(error);\n    });\n  });\n}\n\nfunction register(username, password) {\n  return new Promise(function (resolve, reject) {\n    axios.post('http://localhost:8080/users', {\n      name: username,\n      password: password\n    }, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (resp) {\n      console.log(resp);\n      return resp.data;\n    }).then(function (data) {\n      auth.login(data.data.accessToken);\n      return data;\n    }).then(function (data) {\n      return resolve(data);\n    }).catch(function (error) {\n      reject(error);\n    });\n  });\n}\n\nfunction getAllAdvertisements() {\n  return new Promise(function (resolve, reject) {\n    axios.get('http://localhost:8080/advertisements').then(function (resp) {\n      return resp.data;\n    }).then(function (data) {\n      return resolve(data);\n    }).catch(function (error) {\n      return reject(error);\n    });\n  });\n}\n\nfunction addAdvertisement(advertisement) {\n  return new Promise(function (resolve, reject) {\n    axios.post('http://localhost:8080/advertisements', advertisement, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (resp) {\n      return resolve(resp.data);\n    }).catch(function (error) {\n      return reject(error);\n    });\n  });\n}\n\nfunction getUserInfo() {\n  return new Promise(function (resolve, reject) {\n    axios.get('http://localhost:8080/users/me', {\n      headers: auth.getAuthHeader()\n    }).then(function (resp) {\n      return resolve(resp.data);\n    }).catch(function (error) {\n      return reject(error);\n    });\n  });\n}\n\nfunction logout() {\n  auth.logout();\n  history.push('/login');\n}\n\nfunction handleResponse(resp) {\n  if (resp.status === 200) {\n    return resp.data;\n  } else {\n    auth.logout();\n    history.push('/login');\n  }\n}\n\nexport default {\n  login: login,\n  logout: logout,\n  register: register,\n  getAllAdvertisements: getAllAdvertisements,\n  addAdvertisement: addAdvertisement,\n  getUserInfo: getUserInfo\n};","map":{"version":3,"sources":["/home/phat/Desktop/HTML/Learning Node/RealEstate/frontend/src/sevices/dataService.js"],"names":["axios","auth","history","login","username","password","Promise","resolve","reject","post","name","headers","then","handleResponse","data","accessToken","catch","error","register","resp","console","log","getAllAdvertisements","get","addAdvertisement","advertisement","getUserInfo","getAuthHeader","logout","push","status"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport auth from '../sevices/authService'\nimport history from '../router/history'\n\nfunction login(username, password) {\n  return new Promise((resolve, reject) => {\n    axios.post('http://localhost:8080/authenticate', {\n      name: username,\n      password\n    }, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n    .then(handleResponse)\n    .then(data => {\n      auth.login(data.data.accessToken)\n      return data\n    })\n    .then(data => resolve(data))\n    .catch(error => reject(error))\n  })\n}\n\nfunction register(username, password) {\n  return new Promise((resolve, reject) => {\n    axios.post('http://localhost:8080/users', {\n      name: username,\n      password\n    }, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n    .then(resp => { console.log(resp); return resp.data })\n    .then(data => {\n      auth.login(data.data.accessToken)\n      return data\n    })\n    .then(data => resolve(data))\n    .catch(error => { \n      reject(error) \n    })\n  })\n}\n\nfunction getAllAdvertisements() {\n  return new Promise((resolve, reject) => {\n    axios.get('http://localhost:8080/advertisements')\n         .then(resp => resp.data)\n         .then(data => resolve(data))\n         .catch(error => reject(error))\n  })\n}\n\nfunction addAdvertisement(advertisement) {\n  return new Promise((resolve, reject) => {\n    axios.post('http://localhost:8080/advertisements', advertisement, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(resp => resolve(resp.data))\n    .catch(error => reject(error))\n  })\n}\n\nfunction getUserInfo() {\n  return new Promise((resolve, reject) => {\n    axios.get('http://localhost:8080/users/me', {\n      headers: auth.getAuthHeader()\n    })\n    .then(resp => resolve(resp.data))\n    .catch(error => reject(error))\n  })\n}\n\nfunction logout() {\n  auth.logout()\n  history.push('/login')\n}\n\nfunction handleResponse(resp) {\n  if (resp.status === 200) {\n    return resp.data\n  } else {\n    auth.logout()\n    history.push('/login')\n  }\n}\n\nexport default {\n  login,\n  logout,\n  register,\n  getAllAdvertisements,\n  addAdvertisement,\n  getUserInfo\n}"]},"metadata":{},"sourceType":"module"}