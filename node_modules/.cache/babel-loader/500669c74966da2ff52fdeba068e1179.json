{"ast":null,"code":"import { LOGIN_FAILED, LOGIN_START, LOGIN_SUCCESS, LOGOUT } from '../constants/action-types';\nimport auth from '../../sevices/authService';\nvar initialState = auth.isLoggedIn() ? {\n  loggingIn: false,\n  loggedIn: true,\n  token: auth.getToken()\n} : {\n  loggingIn: false,\n  loggedIn: false,\n  token: null\n};\n\nfunction authReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOGIN_START:\n      return {\n        loggingIn: true,\n        loggedIn: false,\n        token: null\n      };\n\n    case LOGIN_FAILED:\n      return {\n        loggingIn: false,\n        loggedIn: false,\n        token: null\n      };\n\n    case LOGIN_SUCCESS:\n      return {\n        loggingIn: false,\n        loggedIn: true,\n        token: action.payload.accessToken\n      };\n\n    case LOGOUT:\n      return {\n        loggingIn: false,\n        loggedIn: false,\n        token: null\n      };\n  }\n}\n\nexport default authReducer;","map":{"version":3,"sources":["/home/phat/Desktop/HTML/Learning Node/RealEstate/frontend/src/redux/reducers/authReducer.js"],"names":["LOGIN_FAILED","LOGIN_START","LOGIN_SUCCESS","LOGOUT","auth","initialState","isLoggedIn","loggingIn","loggedIn","token","getToken","authReducer","state","action","type","payload","accessToken"],"mappings":"AAAA,SACEA,YADF,EAEEC,WAFF,EAGEC,aAHF,EAIEC,MAJF,QAKO,2BALP;AAMA,OAAOC,IAAP,MAAiB,2BAAjB;AAEA,IAAMC,YAAY,GAAGD,IAAI,CAACE,UAAL,KAAoB;AACvCC,EAAAA,SAAS,EAAE,KAD4B;AAEvCC,EAAAA,QAAQ,EAAE,IAF6B;AAGvCC,EAAAA,KAAK,EAAEL,IAAI,CAACM,QAAL;AAHgC,CAApB,GAIjB;AACFH,EAAAA,SAAS,EAAE,KADT;AAEFC,EAAAA,QAAQ,EAAE,KAFR;AAGFC,EAAAA,KAAK,EAAE;AAHL,CAJJ;;AAUA,SAASE,WAAT,GAAmD;AAAA,MAA9BC,KAA8B,uEAAtBP,YAAsB;AAAA,MAARQ,MAAQ;;AACjD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKb,WAAL;AACE,aAAO;AACLM,QAAAA,SAAS,EAAE,IADN;AAELC,QAAAA,QAAQ,EAAE,KAFL;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF,SAAKT,YAAL;AACE,aAAO;AACLO,QAAAA,SAAS,EAAE,KADN;AAELC,QAAAA,QAAQ,EAAE,KAFL;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF,SAAKP,aAAL;AACE,aAAO;AACLK,QAAAA,SAAS,EAAE,KADN;AAELC,QAAAA,QAAQ,EAAE,IAFL;AAGLC,QAAAA,KAAK,EAAEI,MAAM,CAACE,OAAP,CAAeC;AAHjB,OAAP;;AAKF,SAAKb,MAAL;AACE,aAAO;AACLI,QAAAA,SAAS,EAAE,KADN;AAELC,QAAAA,QAAQ,EAAE,KAFL;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;AApBJ;AA0BD;;AAED,eAAeE,WAAf","sourcesContent":["import {\n  LOGIN_FAILED,\n  LOGIN_START,\n  LOGIN_SUCCESS,\n  LOGOUT\n} from '../constants/action-types'\nimport auth from '../../sevices/authService'\n\nconst initialState = auth.isLoggedIn() ? {\n  loggingIn: false,\n  loggedIn: true,\n  token: auth.getToken()\n} : {\n  loggingIn: false,\n  loggedIn: false,\n  token: null\n}\n\nfunction authReducer(state = initialState, action) {\n  switch(action.type) {\n    case LOGIN_START:\n      return {\n        loggingIn: true,\n        loggedIn: false,\n        token: null\n      }\n    case LOGIN_FAILED:\n      return {\n        loggingIn: false,\n        loggedIn: false,\n        token: null\n      }\n    case LOGIN_SUCCESS:\n      return {\n        loggingIn: false,\n        loggedIn: true, \n        token: action.payload.accessToken\n      }\n    case LOGOUT:\n      return {\n        loggingIn: false,\n        loggedIn: false,\n        token: null\n      }\n  }\n}\n\nexport default authReducer"]},"metadata":{},"sourceType":"module"}