{"ast":null,"code":"import axios from 'axios';\nimport auth from '../sevices/authService';\nexport function login(username, password) {\n  return new Promise(function (resolve, reject) {\n    axios.post('http://localhost:8080/authenticate', {\n      name: username,\n      password: password\n    }, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (resp) {\n      return resp.data;\n    }).then(function (data) {\n      auth.login(data.accessToken);\n      return data;\n    }).then(function (data) {\n      return resolve(data);\n    }).catch(function (error) {\n      return reject(error);\n    });\n  });\n}","map":{"version":3,"sources":["/home/phat/Desktop/HTML/Learning Node/RealEstate/frontend/src/sevices/dataService.js"],"names":["axios","auth","login","username","password","Promise","resolve","reject","post","name","headers","then","resp","data","accessToken","catch","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,OAAO,SAASC,KAAT,CAAeC,QAAf,EAAyBC,QAAzB,EAAmC;AACxC,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCP,IAAAA,KAAK,CAACQ,IAAN,CAAW,oCAAX,EAAiD;AAC/CC,MAAAA,IAAI,EAAEN,QADyC;AAE/CC,MAAAA,QAAQ,EAARA;AAF+C,KAAjD,EAGG;AACDM,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADR,KAHH,EAQCC,IARD,CAQM,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACC,IAAT;AAAA,KARV,EASCF,IATD,CASM,UAAAE,IAAI,EAAI;AACZZ,MAAAA,IAAI,CAACC,KAAL,CAAWW,IAAI,CAACC,WAAhB;AACA,aAAOD,IAAP;AACD,KAZD,EAaCF,IAbD,CAaM,UAAAE,IAAI;AAAA,aAAIP,OAAO,CAACO,IAAD,CAAX;AAAA,KAbV,EAcCE,KAdD,CAcO,UAAAC,KAAK;AAAA,aAAIT,MAAM,CAACS,KAAD,CAAV;AAAA,KAdZ;AAeD,GAhBM,CAAP;AAiBD","sourcesContent":["import axios from 'axios'\nimport auth from '../sevices/authService'\n\nexport function login(username, password) {\n  return new Promise((resolve, reject) => {\n    axios.post('http://localhost:8080/authenticate', {\n      name: username,\n      password\n    }, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n    .then(resp => resp.data)\n    .then(data => {\n      auth.login(data.accessToken)\n      return data\n    })\n    .then(data => resolve(data))\n    .catch(error => reject(error))\n  })\n}"]},"metadata":{},"sourceType":"module"}