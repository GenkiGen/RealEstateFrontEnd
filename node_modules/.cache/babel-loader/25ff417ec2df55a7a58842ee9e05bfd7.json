{"ast":null,"code":"import _toConsumableArray from \"/home/phat/Desktop/HTML/Learning Node/RealEstate/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/phat/Desktop/HTML/Learning Node/RealEstate/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { FETCH_OWN_PROJECTS_START, FETCH_OWN_PROJECTS_FAILED, FETCH_OWN_PROJECTS_SUCCESS, FETCH_ONE_PROJ_START, FETCH_ONE_PROJ_SUCCESS, FETCH_ONE_PROJ_FAILED } from '../constants/action-types';\nimport { combineReducers } from 'redux';\nvar initialState = {\n  oneLoading: false,\n  oneError: null,\n  loading: false,\n  error: null,\n  projects: [],\n  total: 0\n};\n\nfunction ownProjectReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_ONE_PROJ_START:\n      return _objectSpread({}, state, {\n        oneLoading: true,\n        oneError: null\n      });\n\n    case FETCH_ONE_PROJ_SUCCESS:\n      return _objectSpread({}, state, {\n        oneLoading: false,\n        oneError: null,\n        projects: [].concat(_toConsumableArray(state.projects), [action.payload.project]),\n        total: state.total + 1\n      });\n\n    case FETCH_ONE_PROJ_FAILED:\n      return _objectSpread({}, state, {\n        oneLoading: false,\n        oneError: action.payload.error\n      });\n\n    case FETCH_OWN_PROJECTS_START:\n      return {\n        loading: true,\n        error: null,\n        total: 0,\n        projects: []\n      };\n\n    case FETCH_OWN_PROJECTS_FAILED:\n      return {\n        loading: false,\n        error: action.payload.error,\n        total: 0,\n        projects: []\n      };\n\n    case FETCH_OWN_PROJECTS_SUCCESS:\n      return {\n        loading: false,\n        error: null,\n        total: action.payload.total,\n        projects: action.payload.projects\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  own: ownProjectReducer\n});","map":{"version":3,"sources":["/home/phat/Desktop/HTML/Learning Node/RealEstate/frontend/src/redux/reducers/projReducer.js"],"names":["FETCH_OWN_PROJECTS_START","FETCH_OWN_PROJECTS_FAILED","FETCH_OWN_PROJECTS_SUCCESS","FETCH_ONE_PROJ_START","FETCH_ONE_PROJ_SUCCESS","FETCH_ONE_PROJ_FAILED","combineReducers","initialState","oneLoading","oneError","loading","error","projects","total","ownProjectReducer","state","action","type","payload","project","own"],"mappings":";;AAAA,SACEA,wBADF,EAEEC,yBAFF,EAGEC,0BAHF,EAIEC,oBAJF,EAKEC,sBALF,EAMEC,qBANF,QAOO,2BAPP;AAQA,SAASC,eAAT,QAAgC,OAAhC;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,KADO;AAEnBC,EAAAA,QAAQ,EAAE,IAFS;AAGnBC,EAAAA,OAAO,EAAE,KAHU;AAInBC,EAAAA,KAAK,EAAE,IAJY;AAKnBC,EAAAA,QAAQ,EAAE,EALS;AAMnBC,EAAAA,KAAK,EAAE;AANY,CAArB;;AASA,SAASC,iBAAT,GAAyD;AAAA,MAA9BC,KAA8B,uEAAtBR,YAAsB;AAAA,MAARS,MAAQ;;AACvD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKd,oBAAL;AACE,+BACKY,KADL;AAEEP,QAAAA,UAAU,EAAE,IAFd;AAGEC,QAAAA,QAAQ,EAAE;AAHZ;;AAKF,SAAKL,sBAAL;AACE,+BACKW,KADL;AAEEP,QAAAA,UAAU,EAAE,KAFd;AAGEC,QAAAA,QAAQ,EAAE,IAHZ;AAIEG,QAAAA,QAAQ,+BAAMG,KAAK,CAACH,QAAZ,IAAsBI,MAAM,CAACE,OAAP,CAAeC,OAArC,EAJV;AAKEN,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AALvB;;AAOF,SAAKR,qBAAL;AACE,+BACKU,KADL;AAEEP,QAAAA,UAAU,EAAE,KAFd;AAGEC,QAAAA,QAAQ,EAAEO,MAAM,CAACE,OAAP,CAAeP;AAH3B;;AAKF,SAAKX,wBAAL;AACE,aAAO;AACLU,QAAAA,OAAO,EAAE,IADJ;AAELC,QAAAA,KAAK,EAAE,IAFF;AAGLE,QAAAA,KAAK,EAAE,CAHF;AAILD,QAAAA,QAAQ,EAAE;AAJL,OAAP;;AAMF,SAAKX,yBAAL;AACE,aAAO;AACLS,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,KAAK,EAAEK,MAAM,CAACE,OAAP,CAAeP,KAFjB;AAGLE,QAAAA,KAAK,EAAE,CAHF;AAILD,QAAAA,QAAQ,EAAE;AAJL,OAAP;;AAMF,SAAKV,0BAAL;AACE,aAAO;AACLQ,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,KAAK,EAAE,IAFF;AAGLE,QAAAA,KAAK,EAAEG,MAAM,CAACE,OAAP,CAAeL,KAHjB;AAILD,QAAAA,QAAQ,EAAEI,MAAM,CAACE,OAAP,CAAeN;AAJpB,OAAP;;AAMF;AACE,aAAOG,KAAP;AA3CJ;AA6CD;;AAED,eAAeT,eAAe,CAAC;AAC7Bc,EAAAA,GAAG,EAAEN;AADwB,CAAD,CAA9B","sourcesContent":["import {\n  FETCH_OWN_PROJECTS_START,\n  FETCH_OWN_PROJECTS_FAILED,\n  FETCH_OWN_PROJECTS_SUCCESS,\n  FETCH_ONE_PROJ_START,\n  FETCH_ONE_PROJ_SUCCESS,\n  FETCH_ONE_PROJ_FAILED\n} from '../constants/action-types'\nimport { combineReducers } from 'redux'\n\nconst initialState = {\n  oneLoading: false,\n  oneError: null,\n  loading: false,\n  error: null,\n  projects: [],\n  total: 0\n}\n\nfunction ownProjectReducer(state = initialState, action) {\n  switch(action.type) {\n    case FETCH_ONE_PROJ_START:\n      return {\n        ...state,\n        oneLoading: true,\n        oneError: null\n      }\n    case FETCH_ONE_PROJ_SUCCESS:\n      return {\n        ...state, \n        oneLoading: false,\n        oneError: null,\n        projects: [...state.projects, action.payload.project],\n        total: state.total + 1\n      }\n    case FETCH_ONE_PROJ_FAILED:\n      return {\n        ...state,\n        oneLoading: false,\n        oneError: action.payload.error\n      }\n    case FETCH_OWN_PROJECTS_START:\n      return {\n        loading: true,\n        error: null,\n        total: 0,\n        projects: []\n      }\n    case FETCH_OWN_PROJECTS_FAILED:\n      return {\n        loading: false,\n        error: action.payload.error,\n        total: 0,\n        projects: []\n      }\n    case FETCH_OWN_PROJECTS_SUCCESS:\n      return {\n        loading: false,\n        error: null,\n        total: action.payload.total,\n        projects: action.payload.projects\n      }\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  own: ownProjectReducer\n})\n"]},"metadata":{},"sourceType":"module"}